<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5"
         xmlns="http://java.sun.com/xml/ns/javaee" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <!-- ·······································································
    ··· Configuracion de Log4j
    ········································································ -->
    <display-name>Escuela de Trabajo Social</display-name>
    <context-param>
        <description>Archivo de configuracion de Log4j</description>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>
    <listener>
        <description>Listener de Log4j para la peticiones de log</description>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!-- ·······································································
    ··· Front-end encargado de escuchar todas las peticiones web
    ········································································ -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>
    <!-- ·······································································
    ··· Se encarga de iniciar el contexto para Spring
    ········································································ -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>*.htm</url-pattern>
    </servlet-mapping>
    <!-- ·······································································
    ··· Lee los request utilizando codificacion UTF-8
    ········································································ -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <!-- tipo de codificacion -->
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <!-- indica si es obligatoria la codificacion -->
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <!-- url a las que se aplicara el filtro -->
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- ·······································································
        Filtro encargado de mantener las sesiones de Hibernate, su funcion es
        que para una peticion se utilice la sesion existente, y si no existe
        una sesion, se debe de crear una.
    ········································································ -->
    <filter>
        <description>Filtro para crear sesion de hibernate con spring</description>
        <filter-name>OpenSessionInView</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
        <init-param>
            <description>Indica si se usa solo una sesion</description>
            <param-name>singleSession</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <description>Bean encargado de crear la sesion de hibernate</description>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>sessionFactory</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>OpenSessionInView</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>
    <!-- ·······································································
    ··· Configuracion de Spring Security 3.0
    ········································································ -->
    <filter>
        <description>Este filtro se encarga de controlar la seguridad para todos los objetos del sistema</description>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <!-- se indica que objetos del sistema tendran seguridad -->
        <url-pattern>/vistas/*</url-pattern>
        <url-pattern>*.htm</url-pattern>
        <!--
        establece el formulario de logeo, solo se utiliza cuando se
        quiere que Spring Security sea el que cree la pagina con el formulario
        de logeo
        -->
        <!-- url-pattern>/spring_security_login</url-pattern -->
        <!-- realiza la validacion de las credenciales -->
        <url-pattern>/j_spring_security_check</url-pattern>
        <!-- realiza logout de la aplicación -->
        <url-pattern>/j_spring_security_logout</url-pattern>
    </filter-mapping>
    <!-- ·······································································
    ··· Configuracion de Sitemesh
    ········································································ -->
    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- ·······································································
    ··· Configuracion de la sesion
    ········································································ -->
    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    <!-- ·······································································
    ··· Listado de paginas de inicio
    ········································································ -->
    <welcome-file-list>
        <welcome-file>redirect.jsp</welcome-file>
    </welcome-file-list>
    <!-- ·······································································
    ··· Configuracion de SimpleCaptcha
    ········································································ -->
    <servlet>
        <servlet-name>SimpleCaptchaServlet</servlet-name>
        <servlet-class>nl.captcha.servlet.SimpleCaptchaServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>SimpleCaptchaServlet</servlet-name>
        <url-pattern>/simpleImg</url-pattern>
    </servlet-mapping>
</web-app>
