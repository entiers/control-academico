/*
 * @(#)AsignacionEstudianteCarrera.java   29.03.10
 *
 * Universidad de San Carlos de Guatemala
 * Escuela de Trabajo Social
 * Control Academico
 *
 */
package gt.edu.usac.cats.dominio;

//~--- JDK imports ------------------------------------------------------------
//Generated 16/03/2010 06:31:00 PM by Hibernate Tools 3.2.1.GA
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * AsignacionEstudianteCarrera generated by hbm2java
 */
@Entity
@Table(name = "asignacion_estudiante_carrera",
schema = "control",
uniqueConstraints = {
    @UniqueConstraint(name = "asignacion_estudiante_carrera_semestre_uk",
    columnNames = {"id_estudiante", "id_carrera"})
})
public class AsignacionEstudianteCarrera implements java.io.Serializable {

    private int idAsignacionEstudianteCarrera;
    private Estudiante estudiante;
    private Carrera carrera;
    private Date fechaCierre;
    private Set<PensumEstudianteCarrera> pensumEstudianteCarreras = new HashSet<PensumEstudianteCarrera>(0);
    private Set<CursoAprobadoEquivalencia> cursoAprobadoEquivalencias = new HashSet<CursoAprobadoEquivalencia>(0);
    private Set<Asignacion> asignacions = new HashSet<Asignacion>(0);
    private Set<HistorialAsignacionEstudianteCarrera> historialAsignacionEstudianteCarreras = new HashSet<HistorialAsignacionEstudianteCarrera>(0);
    private boolean estado;
    private boolean inscrito;

    public AsignacionEstudianteCarrera() {
        this.estado = true;
    }
//______________________________________________________________________________

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id_asignacion_estudiante_carrera",
    unique = true,
    nullable = false)
    public int getIdAsignacionEstudianteCarrera() {
        return this.idAsignacionEstudianteCarrera;
    }

    public void setIdAsignacionEstudianteCarrera(int idAsignacionEstudianteCarrera) {
        this.idAsignacionEstudianteCarrera = idAsignacionEstudianteCarrera;
    }
//______________________________________________________________________________

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_estudiante",
    nullable = false)
    public Estudiante getEstudiante() {
        return this.estudiante;
    }

    public void setEstudiante(Estudiante estudiante) {
        this.estudiante = estudiante;
    }

//______________________________________________________________________________
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_carrera",
    nullable = false)
    public Carrera getCarrera() {
        return this.carrera;
    }

    public void setCarrera(Carrera carrera) {
        this.carrera = carrera;
    }
//______________________________________________________________________________

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_cierre",
    length = 13)
    public Date getFechaCierre() {
        return fechaCierre;
    }

    public void setFechaCierre(Date fechaCierre) {
        this.fechaCierre = fechaCierre;
    }
//______________________________________________________________________________

    @OneToMany(cascade = CascadeType.ALL,
    fetch = FetchType.LAZY,
    mappedBy = "asignacionEstudianteCarrera")
    public Set<Asignacion> getAsignacions() {
        return this.asignacions;
    }

    public void setAsignacions(Set<Asignacion> asignacions) {
        this.asignacions = asignacions;
    }
//______________________________________________________________________________

    @OneToMany(cascade = CascadeType.ALL,
    fetch = FetchType.LAZY,
    mappedBy = "asignacionEstudianteCarrera")
    @OrderBy("fechaInscripcion desc")
    public Set<HistorialAsignacionEstudianteCarrera> getHistorialAsignacionEstudianteCarreras() {
        return historialAsignacionEstudianteCarreras;
    }

    public void setHistorialAsignacionEstudianteCarreras(Set<HistorialAsignacionEstudianteCarrera> historialAsignacionEstudianteCarreras) {
        this.historialAsignacionEstudianteCarreras = historialAsignacionEstudianteCarreras;
    }
//______________________________________________________________________________

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "asignacionEstudianteCarrera")
    public Set<PensumEstudianteCarrera> getPensumEstudianteCarreras() {
        return this.pensumEstudianteCarreras;
    }

    public void setPensumEstudianteCarreras(Set<PensumEstudianteCarrera> pensumEstudianteCarreras) {
        this.pensumEstudianteCarreras = pensumEstudianteCarreras;
    }
//______________________________________________________________________________

    @Column(name = "estado",
    nullable = false)
    public boolean isEstado() {
        return estado;
    }

    public void setEstado(boolean estado) {
        this.estado = estado;
    }

    @Column(name = "inscrito")
    public boolean isInscrito() {
        return inscrito;
    }

    public void setInscrito(boolean inscrito) {
        this.inscrito = inscrito;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "asignacionEstudianteCarrera")
    public Set<CursoAprobadoEquivalencia> getCursoAprobadoEquivalencias() {
        return this.cursoAprobadoEquivalencias;
    }

    public void setCursoAprobadoEquivalencias(Set<CursoAprobadoEquivalencia> cursoAprobadoEquivalencias) {
        this.cursoAprobadoEquivalencias = cursoAprobadoEquivalencias;
    }
//______________________________________________________________________________

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        builder.append("AsignacionEstudianteCarrera (idAsignacionEstudianteCarrera = ").
                append(this.idAsignacionEstudianteCarrera).
                append(", estado = ").append(this.estado).append(")");

        return builder.toString();
    }
}


//~ Formatted by Jindent --- http://www.jindent.com
