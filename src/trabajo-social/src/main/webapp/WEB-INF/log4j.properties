# Archivo de propiedades que se utiliza para la configuracion
# del framework Log4j, el cual es utilizado para Loggin dentro
# de la aplicacion.
#
# Creado por Daniel Castillo

#################################### LOGGER ####################################
# el nivel de detalle es de informacion, utilizando el appender archivo
log4j.rootLogger = ERROR, consola

# logger para el framework de Spring (usado solo para desarrollo y pruebas)
# log4j.category.org.springframework = ERROR, sistema

# logger para el framework de Hibernate (usado solo para desarrollo y pruebas)
# log4j.category.org.hibernate = ERROR, sistema

# logger para la aplicacion
log4j.category.gt.edu.usac.trabajosocial = INFO, jdbc


########################## CONFIGURACION DE APPENDERS ##########################

#---------------------- APPENDER PARA PROPOSITOS DE DEBUG ---------------------#
# appender del tipo org.apache.log4j.ConsoleAppender, el cual manda la salida
# a la consola, este es util para propositos de debug
log4j.appender.consola = org.apache.log4j.ConsoleAppender

# establece el formateador para el mensaje
log4j.appender.consola.layout = org.apache.log4j.PatternLayout

# es formato es: fecha nivel [categoria] - mensajes
log4j.appender.consola.layout.ConversionPattern = %d %p [%c] - %m%n


#------------------------- APPENDER PARA LA APLICACION ------------------------#
# appender del tipo org.apache.log4j.RollingFileAppender, el cual manda la
# salida a un archivo y despues de que el archivo alcanza un tama\u00F1o determinado,
# se crea un respaldo de ese archivo y se genera uno nuevo
log4j.appender.app = org.apache.log4j.RollingFileAppender

# ubicacion del archivo de log
log4j.appender.app.File = control-academico/logs/app.log

# tamanio maximo para el archivo de log
log4j.appender.app.MaxFileSize = 512KB

# maximo de backup que tendra el archivo de log
log4j.appender.app.MaxBackupIndex = 3

# establece el formateador para el mensaje
log4j.appender.app.layout = org.apache.log4j.PatternLayout

# es formato es: fecha nivel [categoria] - mensajes
log4j.appender.app.layout.ConversionPattern = %d %p [%c] - %m%n


#------------------------ APPENDER PARA LOS FRAMEWORKS ------------------------#
# appender del tipo org.apache.log4j.RollingFileAppender, el cual manda la
# salida a un archivo y despues de que el archivo alcanza un tama\u00F1o determinado,
# se crea un respaldo de ese archivo y se genera uno nuevo
log4j.appender.sistema = org.apache.log4j.RollingFileAppender

# ubicacion del archivo de log
log4j.appender.sistema.File = control-academico/logs/sistema.log

# tamanio maximo para el archivo de log
log4j.appender.sistema.MaxFileSize = 512KB

# maximo de backup que tendra el archivo de log
log4j.appender.sistema.MaxBackupIndex = 3

# establece el formateador para el mensaje
log4j.appender.sistema.layout = org.apache.log4j.PatternLayout

# es formato es: fecha nivel [categoria] - mensajes
log4j.appender.sistema.layout.ConversionPattern = %d %p [%c] - %m%n


#-----------------------APPENDER PARA SPRING y HIBERNATE ----------------------#
# este es un appender personalizado, el cual utiliza la integracion de Srping y
# Hibernate para acceder a la base de datos
log4j.appender.jdbc = gt.edu.usac.trabajosocial.util.SpringHibernateAppender


#----------------------------- APPENDER PARA JDBC -----------------------------#
# appender del tipo org.apache.log4j.JDBCAppender, el cual manda la salida a una
# tabla dentro de la base de datos utilizando una conexion JDBC
# log4j.appender.jdbc = org.apache.log4j.jdbc.JDBCAppender

# direccion URL de la base de datos
# log4j.appender.jdbc.URL = jdbc:postgresql://localhost:5432/control_academico

# tipo de conector
# log4j.appender.jdbc.dbclass = org.postgresql.Driver

# usuario de la base de datos
# log4j.appender.jdbc.user = u_control_academico

# password para el usuario
# log4j.appender.jdbc.password = abc123

# consulta que inserta los datos en la tabla
# log4j.appender.jdbc.sql = INSERT INTO log (fecha, prioridad, logger, mensaje) VALUES ("%d", "%p", "%c", "%m");