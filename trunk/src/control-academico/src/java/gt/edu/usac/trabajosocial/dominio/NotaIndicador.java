/*
 * @(#)NotaIndicador.java   29.03.10
 * 
 * Universidad de San Carlos de Guatemala
 * Escuela de Trabajo Social
 * Control Academico
 *
 */



package gt.edu.usac.trabajosocial.dominio;

//Generated 16/03/2010 06:31:00 PM by Hibernate Tools 3.2.1.GA

//~--- JDK imports ------------------------------------------------------------

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * NotaIndicador generated by hbm2java
 */
@Entity
@Table(
    name = "nota_indicador",
    schema = "control"
)
public class NotaIndicador implements java.io.Serializable {
    private CursoAprobado cursoAprobado;
    private DetalleAsignacion detalleAsignacion;
    private int idNotaIndicador;
    private Indicador indicador;
    private short nota;

    public NotaIndicador() {}

    public NotaIndicador(int idNotaIndicador, Indicador indicador, DetalleAsignacion detalleAsignacion,
                         CursoAprobado cursoAprobado, short nota) {
        this.idNotaIndicador = idNotaIndicador;
        this.indicador = indicador;
        this.detalleAsignacion = detalleAsignacion;
        this.cursoAprobado = cursoAprobado;
        this.nota = nota;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(
        name = "id_nota_indicador",
        unique = true,
        nullable = false
    )
    public int getIdNotaIndicador() {
        return this.idNotaIndicador;
    }

    public void setIdNotaIndicador(int idNotaIndicador) {
        this.idNotaIndicador = idNotaIndicador;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(
        name = "id_indicador",
        nullable = false
    )
    public Indicador getIndicador() {
        return this.indicador;
    }

    public void setIndicador(Indicador indicador) {
        this.indicador = indicador;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(
        name = "id_detalle_asignacion",
        nullable = false
    )
    public DetalleAsignacion getDetalleAsignacion() {
        return this.detalleAsignacion;
    }

    public void setDetalleAsignacion(DetalleAsignacion detalleAsignacion) {
        this.detalleAsignacion = detalleAsignacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(
        name = "id_curso_aprobado",
        nullable = false
    )
    public CursoAprobado getCursoAprobado() {
        return this.cursoAprobado;
    }

    public void setCursoAprobado(CursoAprobado cursoAprobado) {
        this.cursoAprobado = cursoAprobado;
    }

    @Column(
        name = "nota",
        nullable = false
    )
    public short getNota() {
        return this.nota;
    }

    public void setNota(short nota) {
        this.nota = nota;
    }
}


//~ Formatted by Jindent --- http://www.jindent.com
