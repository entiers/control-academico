/*
 * @(#)Asignacion.java   29.03.10
 *
 * Universidad de San Carlos de Guatemala
 * Escuela de Trabajo Social
 * Control Academico
 *
 */



package gt.edu.usac.cats.dominio;

//Generated 16/03/2010 06:31:00 PM by Hibernate Tools 3.2.1.GA

//~--- JDK imports ------------------------------------------------------------

import gt.edu.usac.cats.enums.TipoAsignacion;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;

/**
 * Asignacion generated by hbm2java
 */
@Entity
@Table(
    name = "asignacion",
    schema = "control"
)
public class Asignacion implements java.io.Serializable {
     private int idAsignacion;
     private TipoAsignacion tipoAsignacion;
     private AsignacionEstudianteCarrera asignacionEstudianteCarrera;
     private AsignacionPrimerIngreso asignacionPrimerIngreso;
     private String transaccion;
     private Date fecha;
     private Set<DetalleAsignacion> detalleAsignacions = new HashSet<DetalleAsignacion>(0);
     private Set<CursoAprobado> cursoAprobados = new HashSet<CursoAprobado>(0);

    public Asignacion() {
        this.fecha = new Date();
    }
    

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(
        name = "id_asignacion",
        unique = true,
        nullable = false
    )
    public int getIdAsignacion() {
        return this.idAsignacion;
    }

    public void setIdAsignacion(int idAsignacion) {
        this.idAsignacion = idAsignacion;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(
        name="id_asignacion_estudiante_carrera"
        , nullable=false
    )
    public AsignacionEstudianteCarrera getAsignacionEstudianteCarrera() {
        return this.asignacionEstudianteCarrera;
    }

    public void setAsignacionEstudianteCarrera(AsignacionEstudianteCarrera asignacionEstudianteCarrera) {
        this.asignacionEstudianteCarrera = asignacionEstudianteCarrera;
    }

    @Column(
        name = "tipo_asignacion",
        nullable = true
    )
    @Type(
        type = "gt.edu.usac.cats.enums.GenericEnumUserType",
        parameters = {
            @Parameter(
                name = "enumClass",
                value = "gt.edu.usac.cats.enums.TipoAsignacion"
            ),
            @Parameter(
                name = "identifierMethod",
                value = "toInt"
            ),
            @Parameter(
                name = "valueOfMethod",
                value = "fromInt"
            )
        }
    )
    public TipoAsignacion getTipoAsignacion() {
        return this.tipoAsignacion;
    }

    public void setTipoAsignacion(TipoAsignacion tipoAsignacion) {
        this.tipoAsignacion = tipoAsignacion;
    }

    @Column(
        name = "transaccion",
        nullable = false,
        length = 40
    )
    public String getTransaccion() {
        return this.transaccion;
    }

    public void setTransaccion(String transaccion) {
        this.transaccion = transaccion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(
        name = "fecha",
        nullable = false,
        length = 29
    )
    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @OneToMany(
        cascade = CascadeType.ALL,
        fetch = FetchType.LAZY,
        mappedBy = "asignacion"
    )
    public Set<DetalleAsignacion> getDetalleAsignacions() {
        return this.detalleAsignacions;
    }

    public void setDetalleAsignacions(Set<DetalleAsignacion> detalleAsignacions) {
        this.detalleAsignacions = detalleAsignacions;
    }

    @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="asignacion")
    public Set<CursoAprobado> getCursoAprobados() {
        return this.cursoAprobados;
    }

    public void setCursoAprobados(Set<CursoAprobado> cursoAprobados) {
        this.cursoAprobados = cursoAprobados;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(
        name = "id_asignacion_primer_ingreso",
        nullable = true
    )
    public AsignacionPrimerIngreso getAsignacionPrimerIngreso() {
        return asignacionPrimerIngreso;
    }

    public void setAsignacionPrimerIngreso(AsignacionPrimerIngreso asignacionPrimerIngreso) {
        this.asignacionPrimerIngreso = asignacionPrimerIngreso;
    }

}
//~ Formatted by Jindent --- http://www.jindent.com
