/*
 * @(#)Horario.java   29.03.10
 *
 * Universidad de San Carlos de Guatemala
 * Escuela de Trabajo Social
 * Control Academico
 *
 */



package gt.edu.usac.cats.dominio;

//Generated 16/03/2010 06:31:00 PM by Hibernate Tools 3.2.1.GA

//~--- JDK imports ------------------------------------------------------------

import gt.edu.usac.cats.enums.Dia;
import gt.edu.usac.cats.enums.TipoHorario;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.codehaus.jackson.annotate.JsonIgnore;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;


/**
 * Horario generated by hbm2java
 */
@Entity
@Table(
    name = "horario",
    schema = "control"
)
public class Horario implements java.io.Serializable {
    private int idHorario;
     private Semestre semestre;
     private AsignacionCursoPensum asignacionCursoPensum;
     private Salon salon;
     private Date horaInicio;
     private Date horaFin;     
     private String seccion;     
     private boolean habilitado;
     private TipoHorario tipo;
     private Set<AsignacionCatedraticoHorario> asignacionCatedraticoHorarios = new HashSet<AsignacionCatedraticoHorario>(0);
     private Set<HorarioDia> horarioDias = new HashSet<HorarioDia>(0);
     private Set<DetalleAsignacion> detalleAsignacions = new HashSet<DetalleAsignacion>(0);

    public Horario() {}


    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(
        name = "id_horario",
        unique = true,
        nullable = false
    )
    public int getIdHorario() {
        return this.idHorario;
    }

    public void setIdHorario(int idHorario) {
        this.idHorario = idHorario;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(
        name = "id_semestre",
        nullable = false
    )
    @JsonIgnore
    public Semestre getSemestre() {
        return this.semestre;
    }

    public void setSemestre(Semestre semestre) {
        this.semestre = semestre;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_asignacion_curso_pensum")
    @JsonIgnore
    public AsignacionCursoPensum getAsignacionCursoPensum() {
        return this.asignacionCursoPensum;
    }
    
    public void setAsignacionCursoPensum(AsignacionCursoPensum asignacionCursoPensum) {
        this.asignacionCursoPensum = asignacionCursoPensum;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(
        name = "id_salon",
        nullable = false
    )
    @JsonIgnore
    public Salon getSalon() {
        return this.salon;
    }

    public void setSalon(Salon salon) {
        this.salon = salon;
    }

    @Temporal(TemporalType.TIME)
    @Column(
        name = "hora_inicio",
        nullable = false,
        length = 15
    )
    public Date getHoraInicio() {
        return this.horaInicio;
    }

    public void setHoraInicio(Date horaInicio) {
        this.horaInicio = horaInicio;
    }

    @Temporal(TemporalType.TIME)
    @Column(
        name = "hora_fin",
        nullable = false,
        length = 15
    )
    public Date getHoraFin() {
        return this.horaFin;
    }

    public void setHoraFin(Date horaFin) {
        this.horaFin = horaFin;
    }

    @Column(
        name = "seccion",
        nullable = false,
        length = 2
    )
    public String getSeccion() {
        return this.seccion;
    }

    public void setSeccion(String seccion) {
        this.seccion = seccion;
    }

    @Column(
        name = "habilitado",
        nullable = false
    )
    public boolean isHabilitado() {
        return this.habilitado;
    }

    public void setHabilitado(boolean habilitado) {
        this.habilitado = habilitado;
    }

    @OneToMany(
        cascade = CascadeType.ALL,
        fetch = FetchType.LAZY,
        mappedBy = "horario"
    )
    @JsonIgnore
    public Set<AsignacionCatedraticoHorario> getAsignacionCatedraticoHorarios() {
        return this.asignacionCatedraticoHorarios;
    }

    public void setAsignacionCatedraticoHorarios(Set<AsignacionCatedraticoHorario> asignacionCatedraticoHorarios) {
        this.asignacionCatedraticoHorarios = asignacionCatedraticoHorarios;
    }

    @OneToMany(
        cascade = CascadeType.ALL,
        fetch = FetchType.LAZY,
        mappedBy = "horario"
    )
    @JsonIgnore
    public Set<DetalleAsignacion> getDetalleAsignacions() {
        return this.detalleAsignacions;
    }

    public void setDetalleAsignacions(Set<DetalleAsignacion> detalleAsignacions) {
        this.detalleAsignacions = detalleAsignacions;
    }

    @OneToMany(
        cascade=CascadeType.ALL,
        fetch=FetchType.LAZY,
        mappedBy="horario"
    )
    @JsonIgnore
    public Set<HorarioDia> getHorarioDias() {
        return this.horarioDias;
    }

    public void setHorarioDias(Set<HorarioDia> horarioDias) {
        this.horarioDias = horarioDias;
    }


    @Column(
        name = "tipo",
        nullable = false
    )
    @Type(
        type = "gt.edu.usac.cats.enums.GenericEnumUserType",
        parameters = {
            @Parameter(
                name = "enumClass",
                value = "gt.edu.usac.cats.enums.TipoHorario"
            ),
            @Parameter(
                name = "identifierMethod",
                value = "toInt"
            ),
            @Parameter(
                name = "valueOfMethod",
                value = "fromInt"
            )
        }
    )
    public TipoHorario getTipo() {
        return tipo;
    }

    public void setTipo(TipoHorario tipo) {
        this.tipo = tipo;
    }


    /**
     * Este metodo se encarga de concatenar los nombres de los dias que tiene asignado el horario
     * para poder visualizarse en la pagina.  Este propiedad es accedida en la pagina @code buscarHorario.htm.
     *
     * @return La cadena que tiene concatenado los dias.
     */
    @Transient
    public String getHorarioDiasAsString(){
        StringBuilder builder = new StringBuilder();

        String [] nombreDias = new String [7];

        if(!this.horarioDias.isEmpty()){
            for(Iterator <HorarioDia> it = this.horarioDias.iterator(); it.hasNext();){
                HorarioDia horarioDia = it.next();

                //Se ingresar al primero al array para ordenarlo alfabeticamente.
                //Suponiendo que los numeros de los dias no cambiaran en el enum "Dia" (1-7) no habra ningun problema
                Dia d = Dia.fromInt(horarioDia.getNumeroDia());
                nombreDias[d.getNumeroDia() - 1] = d.getNombreDia();                
            }

            //Ahora si se concatena.
            for(String nombreDia : nombreDias){
                if(nombreDia != null && !nombreDia.isEmpty()){
                    builder.append(nombreDia).append(" - ");
                }
            }

        }else{
            return "";
        }
        String asString = builder.toString();

        return asString.substring(0, asString.length() - 3);
    }


    /**
     * Esta propiedad se encarga de retornar un arreglo de cadena que tienen los numeros de dias
     * que tiene relacionado el horario.  Este metodo es util para la visualizacion de los dias
     * seleccionaes en la pagina @code editarHorario.
     *
     * @return Arreglo de cadenas donde se tienen almacenado el numero de los dias.
     */
    @Transient
    public String [] getHorarioDiasNumeroAsArrayString(){
        if(!this.horarioDias.isEmpty()){


            List <String> horarioDiasWrapper = new ArrayList();

            
            for(Iterator <HorarioDia> it = this.horarioDias.iterator(); it.hasNext();){
                HorarioDia horarioDia = it.next();
                horarioDiasWrapper.add(String.valueOf(horarioDia.getNumeroDia()));
            }
            
            String [] a = new String[horarioDiasWrapper.size()];
            horarioDiasWrapper.toArray(a);

            return a;
        }
        return null;
    }
}


//~ Formatted by Jindent --- http://www.jindent.com
